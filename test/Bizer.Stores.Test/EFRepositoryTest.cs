using Bizer.Stores.EntityFrameworkCore;
using Bizer.Test;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;

namespace Bizer.Stores.Test;
public class EFRepositoryTest:TestBase
{
    private readonly IRepository<User> _repository;
    private readonly IUnitOfWork _unitOfWork;

    public EFRepositoryTest()
    {
        _repository = GetService<IRepository<User>>();
        _unitOfWork=GetService<IUnitOfWork>();
    }

    protected override void ConfigureServices(IServiceCollection services)
    {
        services.AddBizer(configure => configure.Assemblies.Add(typeof(AutoGeneratedProgram).Assembly))
            .AddStores(store =>
            {
                store.AddEFCoreStore().AddDbContext(options => options.UseInMemoryDatabase("db")).AddDefaultRepository();
            });
        
    }

    [Fact]
    public void Test_Add()
    {
        var entity= _repository.Add(new() { Id = 1, Name = "admin" });
        var rows= _unitOfWork.Commit();
        Assert.Equal(1, rows);

        var query = _repository.Query.SingleOrDefault(m => m.Id == entity.Id);
        Assert.NotNull(query);
        Assert.Equal(query.Id, entity.Id);
    }
}