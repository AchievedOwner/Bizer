@page "/"

<h1>Hello, world!</h1>

@using Bizer.Client
@using Sample.Services

@inject ITestService Service
@inject IServiceProvider Provider
@inject HttpClient Client

@code{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // var service = Client.For<ITestService>(Provider);
            // var result = await service.GetAsync();

            //或 直接调用方法，都会报错


             await Service.Auth();


            /*
             *
             *       Unhandled exception rendering component: Operation is not supported on this platform.
    System.PlatformNotSupportedException: Operation is not supported on this platform.
       at System.Net.Http.BrowserHttpHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
       at System.Net.Http.HttpMessageHandlerStage.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.HttpClientHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.DelegatingHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.DelegatingHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.DelegatingHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)
       at System.Net.Http.HttpMessageInvoker.Send(HttpRequestMessage request, CancellationToken cancellationToken)
             */
            //Console.WriteLine(result.Succeed);




            //直接用就可以，用代理跑就不行

            // var request = new HttpRequestMessageResolver(Provider).Resolve<ITestService>(nameof(ITestService.GetAsync));

            // var response= await Client.SendAsync(request);
            // response.EnsureSuccessStatusCode();
        }
    }
}